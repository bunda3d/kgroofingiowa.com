// TYPOGRAPHY
@use '@angular/material' as mat;

/* extending Material theme and typography thru Custom Configs 
to make title fonts (h1, display-4, etc.) use Roboto Condensed, 
and body fonts (body-1, buttons, etc.) use Roboto */
// https://material.angular.io/guide/typography 

@import '@angular/material/theming';

// Define a custom typography config that overrides the font-family as well as the other `headlines` and `body-1` levels. 
$custom-heading-typography: mat.define-typography-config(
  $font-family: $title-font,
  $headline-1: mat.define-typography-level($d4, $disp-line-ht, $light),
  $headline-2: mat.define-typography-level($d3, $disp-line-ht, $regular),
  $headline-3: mat.define-typography-level($d2, $title-line-ht, $regular),
  $headline-4: mat.define-typography-level($d1, $title-line-ht, $regular),
  $headline-5: mat.define-typography-level($h1, $title-line-ht, $regular),
  $headline-6: mat.define-typography-level($h2, $title-line-ht, $regular),
  $subtitle-1: mat.define-typography-level($h3, $title-line-ht $regular),
  $body-1: mat.define-typography-level($h4, $title-line-ht, $light),
);
$custom-body-typography: mat.define-typography-config(
  $font-family: $primary-font,
  $body-2: mat.define-typography-level($primary-fs, $primary-line-ht, $regular),
  $subtitle-2: mat.define-typography-level($primary-fs, $primary-line-ht, $medium),
  $caption: mat.define-typography-level($primary-fs, $caption-line-ht, $light),
  $button: mat.define-typography-level($primary-fs, $disp-line-ht, $medium),
  $body-1: mat.define-typography-level(inherit, $input-line-ht, $regular),
);
// Override typography CSS classes (e.g., mat-h1, mat-display-1, mat-typography, etc.).
// @include mat-base-typography($custom-heading-typography);
// Override typography for all Angular Material, including mat-base-typography and all components.
@include mat.all-component-typographies($custom-heading-typography and $custom-body-typography); 
// Override the typography in the core CSS.
// @include mat-core($custom-body-typography);

// font stacks
%primary-font-fam {
  font-family: $primary-font, "Helvetica Neue", sans-serif;
}
%title-font-fam {
  font-family: $title-font, "Franklin Gothic Bold", sans-serif;
}

// font styles for main elements
body {
  @extend %primary-font-fam;

  font-size: $primary-fs;
  font-weight: $regular;
}

p {
  margin-bottom: $pad;
  line-height: $primary-line-ht;
}

// Header Styles
h1,
h2,
h3,
h4,
h5,
h6 {
  @extend %title-font-fam;
  font-weight: $medium;
  margin: 0;
  margin-top: $pad;
  margin-bottom: calc($pad/2);
  line-height: $title-line-ht;

  a {
    font-weight: inherit;
  }
}

h5 { font-size: $h5;}
h6 { font-size: $h6;}

// Text Styles
em { font-style: italic; }
strong { font-weight: bold; }
.bld { font-weight: bold; }
.uppercase { text-transform: uppercase; }
.obl { font-style: $obli; }
.shd { text-shadow: 3px 3px 3px $nblu; } 
.nobrk { white-space: nowrap; }
.brkwrd {
  word-break: break-word !important;
}
.mat-white-space-normal {
  mat-toolbar-row {
    white-space: normal !important;
  }
}
// 
// JUSTIFY CONTENT
// 
.jcs {
  justify-content: start;
}
.jcfs { 
  justify-content: flex-start;
}
.jcc {
  justify-content: center;
}
.jce { 
  justify-content: end;
}
.jcfe { 
  justify-content: flex-end;
}
.jcl {
  justify-content: left;
}
.jcr {
  justify-content: right;
}
.jcsb {
  justify-content: space-between;
}
.jcsa {
  justify-content: space-around;
}
.jcse {
  justify-content: space-evenly;
}
.jcst {
  justify-content: stretch;
}

//
// JUSTIFY ITEMS
//
.jil {
  justify-items: left;
}
.jic {
  justify-items: center;
}
.jir {
  justify-items: right;
}
//
// JUSTIFY SELF
//
.jsl {
  justify-self: left;
}
.jsc {
  justify-self: center;
}
.jsr {
  justify-self: right;
}

//
// TEXT ALIGN
// 
.tal {
  text-align: left;
}
.tac {
  text-align: center;
}
.tar {
  text-align: right;
}

/** html {
  font-family: $sansSerif, sans-serif;
  font-weight: normal;
  color: $black;
  line-height: $baseLineHeight;
  font-size: 14px;

  @media only screen and (min-width: $smallBreakpoint) {
    font-size: 15px;
  }

  @media only screen and (min-width: $largeBreakpoint) {
    font-size: $baseFontSize;
  }
}
*/
